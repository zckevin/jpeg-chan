const path = require("path");
const os = require("os");

const output = {
  path: path.join(os.tmpdir(), '_karma_webpack_') + Math.floor(Math.random() * 1000000),
};

const webpackConfig = {
  target: "web",
  module: {
    rules: [
      {
        test: /\.(png|jpe?g|gif)$/i,
        use: [
          {
            loader: 'file-loader',
          },
        ],
      }
    ],
  },
  resolve: {
    fallback: {
      fs: false,
      path: false,
      stream: false,
      assert: false,
    }
  }
};

module.exports = function (config) {
  config.set({
    plugins: [
      "karma-webpack",
      "karma-jasmine",
      "karma-chrome-launcher",
    ],

    browsers: ["Chrome"],

    // base path that will be used to resolve all patterns (eg. files, exclude)
    basePath: "",

    // frameworks to use
    // available frameworks: https://npmjs.org/browse/keyword/karma-adapter
    frameworks: ["jasmine"],

    webpack: { ...webpackConfig, output },

    // exit on test finish, if set to false, karma will watch for changes and rerun tests
    // default value is false
    // singleRun: true,

    // list of files / patterns to load in the browser
    files: [
      "../../src/jpeg-js/lib/decoder.js",
      "../../src/jpeg-js/lib/encoder.js",
      "../../src/jpeg-js/index.js",
      "../../src/weibo_jpeg_channel.js",
      "../../src/weibo-jpeg-decoder/**/*.js",
      "../../src/assert.js",
      "../../src/utils.js",
      "../../src/bits_manipulation.js",

      "./**/*.test.js",

      // tell karma static file server to serve jpeg files generated by webpack
      // https://github.com/ryanclark/karma-webpack/issues/498#issuecomment-790040818
      {
        pattern: `${output.path}/**/*`,
        watched: false,
        included: false,
        served: true,
      },
    ],

    // preprocess matching files before serving them to the browser
    // available preprocessors: https://npmjs.org/browse/keyword/karma-preprocessor
    preprocessors: {
      "../../src/jpeg-js/lib/decoder.js": ["webpack"],
      "../../src/jpeg-js/lib/encoder.js": ["webpack"],
      "../../src/jpeg-js/index.js": ["webpack"],
      "../../src/weibo_jpeg_channel.js": ["webpack"],
      "../../src/weibo-jpeg-decoder/**/*.js": ["webpack"],
      "../../src/assert.js": ["webpack"],
      "../../src/utils.js": ["webpack"],
      "../../src/bits_manipulation.js": ["webpack"],

      "./**/*.js": ["webpack"],
    },
  });
};
